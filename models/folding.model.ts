export type FoldingState = {
  data: {
    fold_type: string;
    fold_finished_size: string;
    fold_open_size: string;
    fold_column: string;
    fold_page: string;
    fold_text_paper: string;
    fold_printing: string;
    fold_text_coating: string;
    fold_500: number;
    fold_1000: number;
    fold_2000: number;
    fold_3000: number;
    fold_4000: number;
    fold_5000: number;
  };
  data_text_no: {
    fold_type: string;
    fold_finished_size: string;
    fold_open_size: string;
    fold_column: string;
    fold_page: string;
    fold_text_paper: string;
    fold_printing: string;
    fold_text_coating: string;
    fold_500: number;
    fold_1000: number;
    fold_2000: number;
    fold_3000: number;
    fold_4000: number;
    fold_5000: number;
  };
  data_text_paper: {
    fold_type: string;
    fold_finished_size: string;
    fold_open_size: string;
    fold_column: string;
    fold_page: string;
    fold_text_paper: string;
    fold_printing: string;
    fold_text_coating: string;
    fold_500: number;
    fold_1000: number;
    fold_2000: number;
    fold_3000: number;
    fold_4000: number;
    fold_5000: number;
  };
  data_printing: {
    fold_type: string;
    fold_finished_size: string;
    fold_open_size: string;
    fold_column: string;
    fold_page: string;
    fold_text_paper: string;
    fold_printing: string;
    fold_text_coating: string;
    fold_500: number;
    fold_1000: number;
    fold_2000: number;
    fold_3000: number;
    fold_4000: number;
    fold_5000: number;
  };
  data_cover_paper_edit : {
    fold_type: string;
    fold_finished_size: string;
    fold_open_size: string;
    fold_column: string;
    fold_page: string;
    fold_text_paper: string;
    fold_printing: string;
    fold_text_coating: string;
    fold_500: number;
    fold_1000: number;
    fold_2000: number;
    fold_3000: number;
    fold_4000: number;
    fold_5000: number;
  }
};
